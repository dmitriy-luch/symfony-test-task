<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('WhmcsPrice', 'doctrine');

/**
 * BaseWhmcsPrice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $type
 * @property integer $currency
 * @property integer $relid
 * @property decimal $msetupfee
 * @property decimal $qsetupfee
 * @property decimal $ssetupfee
 * @property decimal $asetupfee
 * @property decimal $bsetupfee
 * @property decimal $tsetupfee
 * @property decimal $monthly
 * @property decimal $quarterly
 * @property decimal $semiannually
 * @property decimal $annually
 * @property decimal $biennially
 * @property decimal $triennially
 * @property WhmcsDomainTld $WhmcsDomainTld
 * @property WhmcsProductInternal $WhmcsProductInternal
 * 
 * @method integer              getId()                   Returns the current record's "id" value
 * @method enum                 getType()                 Returns the current record's "type" value
 * @method integer              getCurrency()             Returns the current record's "currency" value
 * @method integer              getRelid()                Returns the current record's "relid" value
 * @method decimal              getMsetupfee()            Returns the current record's "msetupfee" value
 * @method decimal              getQsetupfee()            Returns the current record's "qsetupfee" value
 * @method decimal              getSsetupfee()            Returns the current record's "ssetupfee" value
 * @method decimal              getAsetupfee()            Returns the current record's "asetupfee" value
 * @method decimal              getBsetupfee()            Returns the current record's "bsetupfee" value
 * @method decimal              getTsetupfee()            Returns the current record's "tsetupfee" value
 * @method decimal              getMonthly()              Returns the current record's "monthly" value
 * @method decimal              getQuarterly()            Returns the current record's "quarterly" value
 * @method decimal              getSemiannually()         Returns the current record's "semiannually" value
 * @method decimal              getAnnually()             Returns the current record's "annually" value
 * @method decimal              getBiennially()           Returns the current record's "biennially" value
 * @method decimal              getTriennially()          Returns the current record's "triennially" value
 * @method WhmcsDomainTld       getWhmcsDomainTld()       Returns the current record's "WhmcsDomainTld" value
 * @method WhmcsProductInternal getWhmcsProductInternal() Returns the current record's "WhmcsProductInternal" value
 * @method WhmcsPrice           setId()                   Sets the current record's "id" value
 * @method WhmcsPrice           setType()                 Sets the current record's "type" value
 * @method WhmcsPrice           setCurrency()             Sets the current record's "currency" value
 * @method WhmcsPrice           setRelid()                Sets the current record's "relid" value
 * @method WhmcsPrice           setMsetupfee()            Sets the current record's "msetupfee" value
 * @method WhmcsPrice           setQsetupfee()            Sets the current record's "qsetupfee" value
 * @method WhmcsPrice           setSsetupfee()            Sets the current record's "ssetupfee" value
 * @method WhmcsPrice           setAsetupfee()            Sets the current record's "asetupfee" value
 * @method WhmcsPrice           setBsetupfee()            Sets the current record's "bsetupfee" value
 * @method WhmcsPrice           setTsetupfee()            Sets the current record's "tsetupfee" value
 * @method WhmcsPrice           setMonthly()              Sets the current record's "monthly" value
 * @method WhmcsPrice           setQuarterly()            Sets the current record's "quarterly" value
 * @method WhmcsPrice           setSemiannually()         Sets the current record's "semiannually" value
 * @method WhmcsPrice           setAnnually()             Sets the current record's "annually" value
 * @method WhmcsPrice           setBiennially()           Sets the current record's "biennially" value
 * @method WhmcsPrice           setTriennially()          Sets the current record's "triennially" value
 * @method WhmcsPrice           setWhmcsDomainTld()       Sets the current record's "WhmcsDomainTld" value
 * @method WhmcsPrice           setWhmcsProductInternal() Sets the current record's "WhmcsProductInternal" value
 * 
 * @package    shop
 * @subpackage model
 * @author     Dmitriy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWhmcsPrice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tblpricing');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'enum', 14, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'product',
              1 => 'addon',
              2 => 'configoptions',
              3 => 'domainregister',
              4 => 'domaintransfer',
              5 => 'domainrenew',
              6 => 'domainaddons',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 14,
             ));
        $this->hasColumn('currency', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('relid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('msetupfee', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('qsetupfee', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('ssetupfee', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('asetupfee', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('bsetupfee', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('tsetupfee', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('monthly', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('quarterly', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('semiannually', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('annually', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('biennially', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('triennially', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WhmcsDomainTld', array(
             'local' => 'relid',
             'foreign' => 'id'));

        $this->hasOne('WhmcsProductInternal', array(
             'local' => 'relid',
             'foreign' => 'id'));
    }
}